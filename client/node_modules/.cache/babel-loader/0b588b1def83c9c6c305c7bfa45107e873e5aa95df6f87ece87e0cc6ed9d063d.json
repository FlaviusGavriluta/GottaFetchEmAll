{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Flavius\\\\Documents\\\\0. CodeCool\\\\2. Web Frameworks\\\\3rd TW\\\\gotta-fetch-em-all-react-ChircuAndrei\\\\client\\\\src\\\\components\\\\PokemonData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { NoPokemonFound } from \"./NoPokemonFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PokemonData = _ref => {\n  _s();\n  let {\n    locationUrl,\n    setEncounterEnded\n  } = _ref;\n  const [pokemon, setPokemon] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const locationResponse = await fetch(locationUrl);\n        const locationData = await locationResponse.json();\n        const areas = locationData.areas;\n        const randomIndexOfAreas = Math.floor(Math.random() * areas.length);\n        const areaUrl = areas[randomIndexOfAreas].url;\n        const areaResponse = await fetch(areaUrl);\n        const areaData = await areaResponse.json();\n        const pokemonEncounters = areaData.pokemon_encounters;\n        if (pokemonEncounters.length > 0) {\n          const randomIndexOfPokemons = Math.floor(Math.random() * pokemonEncounters.length);\n          const pokemonUrl = pokemonEncounters[randomIndexOfPokemons].pokemon.url;\n          const pokemonResponse = await fetch(pokemonUrl);\n          const pokemonData = await pokemonResponse.json();\n          setPokemon(pokemonData);\n        } else {\n          setPokemon(\"none\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleEncounterEnd = () => {\n    setEncounterEnded(true);\n  };\n  if (pokemon === null || pokemon === 'none') {\n    return /*#__PURE__*/_jsxDEV(NoPokemonFound, {\n      onTryAnotherLocation: handleEncounterEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  } else {\n    re;\n  }\n};\n_s(PokemonData, \"cYyGFEpoV+taaQmIEbPwGxCid+w=\");\n_c = PokemonData;\nvar _c;\n$RefreshReg$(_c, \"PokemonData\");","map":{"version":3,"names":["React","useEffect","useState","NoPokemonFound","jsxDEV","_jsxDEV","PokemonData","_ref","_s","locationUrl","setEncounterEnded","pokemon","setPokemon","fetchData","locationResponse","fetch","locationData","json","areas","randomIndexOfAreas","Math","floor","random","length","areaUrl","url","areaResponse","areaData","pokemonEncounters","pokemon_encounters","randomIndexOfPokemons","pokemonUrl","pokemonResponse","pokemonData","err","console","log","handleEncounterEnd","onTryAnotherLocation","fileName","_jsxFileName","lineNumber","columnNumber","re","_c","$RefreshReg$"],"sources":["C:/Users/Flavius/Documents/0. CodeCool/2. Web Frameworks/3rd TW/gotta-fetch-em-all-react-ChircuAndrei/client/src/components/PokemonData.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { NoPokemonFound } from \"./NoPokemonFound\";\r\n\r\nexport const PokemonData = ({ locationUrl, setEncounterEnded }) => {\r\n  const [pokemon, setPokemon] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const locationResponse = await fetch(locationUrl);\r\n        const locationData = await locationResponse.json();\r\n        const areas = locationData.areas;\r\n        const randomIndexOfAreas = Math.floor(Math.random() * areas.length);\r\n        const areaUrl = areas[randomIndexOfAreas].url;\r\n        const areaResponse = await fetch(areaUrl);\r\n        const areaData = await areaResponse.json();\r\n        const pokemonEncounters = areaData.pokemon_encounters;\r\n        if (pokemonEncounters.length > 0) {\r\n          const randomIndexOfPokemons = Math.floor(\r\n            Math.random() * pokemonEncounters.length\r\n          );\r\n          const pokemonUrl =\r\n            pokemonEncounters[randomIndexOfPokemons].pokemon.url;\r\n          const pokemonResponse = await fetch(pokemonUrl);\r\n          const pokemonData = await pokemonResponse.json();\r\n          setPokemon(pokemonData);\r\n        } else {\r\n          setPokemon(\"none\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleEncounterEnd = ()=>{\r\n    setEncounterEnded(true);\r\n  }\r\n  if (pokemon === null || pokemon === 'none') {\r\n    return <NoPokemonFound onTryAnotherLocation={handleEncounterEnd}/>;\r\n  } else {\r\n    re\r\n  }\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,MAAMC,WAAW,GAAGC,IAAA,IAAwC;EAAAC,EAAA;EAAA,IAAvC;IAAEC,WAAW;IAAEC;EAAkB,CAAC,GAAAH,IAAA;EAC5D,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,gBAAgB,GAAG,MAAMC,KAAK,CAACN,WAAW,CAAC;QACjD,MAAMO,YAAY,GAAG,MAAMF,gBAAgB,CAACG,IAAI,EAAE;QAClD,MAAMC,KAAK,GAAGF,YAAY,CAACE,KAAK;QAChC,MAAMC,kBAAkB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,KAAK,CAACK,MAAM,CAAC;QACnE,MAAMC,OAAO,GAAGN,KAAK,CAACC,kBAAkB,CAAC,CAACM,GAAG;QAC7C,MAAMC,YAAY,GAAG,MAAMX,KAAK,CAACS,OAAO,CAAC;QACzC,MAAMG,QAAQ,GAAG,MAAMD,YAAY,CAACT,IAAI,EAAE;QAC1C,MAAMW,iBAAiB,GAAGD,QAAQ,CAACE,kBAAkB;QACrD,IAAID,iBAAiB,CAACL,MAAM,GAAG,CAAC,EAAE;UAChC,MAAMO,qBAAqB,GAAGV,IAAI,CAACC,KAAK,CACtCD,IAAI,CAACE,MAAM,EAAE,GAAGM,iBAAiB,CAACL,MAAM,CACzC;UACD,MAAMQ,UAAU,GACdH,iBAAiB,CAACE,qBAAqB,CAAC,CAACnB,OAAO,CAACc,GAAG;UACtD,MAAMO,eAAe,GAAG,MAAMjB,KAAK,CAACgB,UAAU,CAAC;UAC/C,MAAME,WAAW,GAAG,MAAMD,eAAe,CAACf,IAAI,EAAE;UAChDL,UAAU,CAACqB,WAAW,CAAC;QACzB,CAAC,MAAM;UACLrB,UAAU,CAAC,MAAM,CAAC;QACpB;MACF,CAAC,CAAC,OAAOsB,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IACDrB,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMwB,kBAAkB,GAAGA,CAAA,KAAI;IAC7B3B,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EACD,IAAIC,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,MAAM,EAAE;IAC1C,oBAAON,OAAA,CAACF,cAAc;MAACmC,oBAAoB,EAAED;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EACpE,CAAC,MAAM;IACLC,EAAE;EACJ;AACF,CAAC;AAACnC,EAAA,CAzCWF,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}