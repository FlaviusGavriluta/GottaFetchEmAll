{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Flavius\\\\Documents\\\\0. CodeCool\\\\2. Web Frameworks\\\\3rd TW\\\\gotta-fetch-em-all-react-ChircuAndrei\\\\client\\\\src\\\\components\\\\PokemonData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { NoPokemonFound } from \"./NoPokemonFound\";\nimport { PokemonFound } from \"./PokemonFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PokemonData = _ref => {\n  _s();\n  let {\n    locationUrl,\n    setEncounterEnded,\n    ourPokemons\n  } = _ref;\n  const [pokemon, setPokemon] = useState(null);\n  useEffect(() => {\n    let usersPokemons = [];\n    usersPokemon.map(async pokeApi => {\n      const pokeApiResponse = await fetch(pokeApi);\n      const pokeApiData = await pokeApiResponse.json();\n      usersPokemons.push(pokeApiData);\n    });\n    setOurPokemons(usersPokemons);\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const locationResponse = await fetch(locationUrl);\n        const locationData = await locationResponse.json();\n        const areas = locationData.areas;\n        const randomIndexOfAreas = Math.floor(Math.random() * areas.length);\n        const areaUrl = areas[randomIndexOfAreas].url;\n        const areaResponse = await fetch(areaUrl);\n        const areaData = await areaResponse.json();\n        const pokemonEncounters = areaData.pokemon_encounters;\n        if (pokemonEncounters.length > 0) {\n          const randomIndexOfPokemons = Math.floor(Math.random() * pokemonEncounters.length);\n          const pokemonUrl = pokemonEncounters[randomIndexOfPokemons].pokemon.url;\n          const pokemonResponse = await fetch(pokemonUrl);\n          const pokemonData = await pokemonResponse.json();\n          setPokemon(pokemonData);\n        } else {\n          setPokemon(\"none\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleEncounterEnd = () => {\n    setEncounterEnded(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: pokemon === null || pokemon === \"none\" ? /*#__PURE__*/_jsxDEV(NoPokemonFound, {\n      onTryAnotherLocation: handleEncounterEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PokemonFound, {\n      pokemon: pokemon,\n      ourPokemons: ourPokemons,\n      onEncounterEnd: handleEncounterEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(PokemonData, \"1xzkJaQe/02swQFtmAY8Tn4k2Ao=\");\n_c = PokemonData;\nvar _c;\n$RefreshReg$(_c, \"PokemonData\");","map":{"version":3,"names":["React","useEffect","useState","NoPokemonFound","PokemonFound","jsxDEV","_jsxDEV","PokemonData","_ref","_s","locationUrl","setEncounterEnded","ourPokemons","pokemon","setPokemon","usersPokemons","usersPokemon","map","pokeApi","pokeApiResponse","fetch","pokeApiData","json","push","setOurPokemons","fetchData","locationResponse","locationData","areas","randomIndexOfAreas","Math","floor","random","length","areaUrl","url","areaResponse","areaData","pokemonEncounters","pokemon_encounters","randomIndexOfPokemons","pokemonUrl","pokemonResponse","pokemonData","err","console","log","handleEncounterEnd","children","onTryAnotherLocation","fileName","_jsxFileName","lineNumber","columnNumber","onEncounterEnd","_c","$RefreshReg$"],"sources":["C:/Users/Flavius/Documents/0. CodeCool/2. Web Frameworks/3rd TW/gotta-fetch-em-all-react-ChircuAndrei/client/src/components/PokemonData.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { NoPokemonFound } from \"./NoPokemonFound\";\r\nimport { PokemonFound } from \"./PokemonFound\";\r\n\r\nexport const PokemonData = ({ locationUrl, setEncounterEnded, ourPokemons }) => {\r\n  const [pokemon, setPokemon] = useState(null);\r\n \r\n\r\n  useEffect(() => {\r\n    let usersPokemons = [];\r\n    usersPokemon.map(async (pokeApi) => {\r\n      const pokeApiResponse = await fetch(pokeApi);\r\n      const pokeApiData = await pokeApiResponse.json();\r\n      usersPokemons.push(pokeApiData);\r\n    });\r\n    setOurPokemons(usersPokemons)\r\n  }, []);\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const locationResponse = await fetch(locationUrl);\r\n        const locationData = await locationResponse.json();\r\n        const areas = locationData.areas;\r\n        const randomIndexOfAreas = Math.floor(Math.random() * areas.length);\r\n        const areaUrl = areas[randomIndexOfAreas].url;\r\n        const areaResponse = await fetch(areaUrl);\r\n        const areaData = await areaResponse.json();\r\n        const pokemonEncounters = areaData.pokemon_encounters;\r\n        if (pokemonEncounters.length > 0) {\r\n          const randomIndexOfPokemons = Math.floor(\r\n            Math.random() * pokemonEncounters.length\r\n          );\r\n          const pokemonUrl =\r\n            pokemonEncounters[randomIndexOfPokemons].pokemon.url;\r\n          const pokemonResponse = await fetch(pokemonUrl);\r\n          const pokemonData = await pokemonResponse.json();\r\n          setPokemon(pokemonData);\r\n        } else {\r\n          setPokemon(\"none\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleEncounterEnd = () => {\r\n    setEncounterEnded(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {pokemon === null || pokemon === \"none\" ? (\r\n        <NoPokemonFound onTryAnotherLocation={handleEncounterEnd} />\r\n      ) : (\r\n        <PokemonFound pokemon={pokemon} ourPokemons={ourPokemons} onEncounterEnd={handleEncounterEnd} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}